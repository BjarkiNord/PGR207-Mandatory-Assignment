MLPv3(
  (layer1): Sequential(
    (0): Flatten(start_dim=1, end_dim=-1)
    (1): Linear(in_features=784, out_features=128, bias=True)
    (2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): ReLU()
  )
  (layer2): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer3): Sequential(
    (0): Linear(in_features=64, out_features=32, bias=True)
    (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
  )
  (layer4): Sequential(
    (0): Linear(in_features=32, out_features=16, bias=True)
    (1): BatchNorm1d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.01)
  )
  (layer5): Sequential(
    (0): Linear(in_features=16, out_features=10, bias=True)
  )
)
Loss after 03072 examples: 1.98999107
Loss after 06272 examples: 1.76594949
Loss after 09472 examples: 1.56701875
Loss after 12640 examples: 1.40728557
Loss after 15840 examples: 1.24583781
Loss after 19040 examples: 1.14183545
Loss after 22240 examples: 0.88403451
Loss after 25408 examples: 0.72277838
Loss after 28608 examples: 0.67438430
Loss after 31808 examples: 0.53761578
Loss after 35008 examples: 0.43183178
Loss after 38176 examples: 0.38982975
Loss after 41376 examples: 0.32250500
Loss after 44576 examples: 0.34812722
Loss after 47776 examples: 0.35799941
Loss after 50944 examples: 0.20025122
Loss after 54144 examples: 0.24970371
Loss after 57344 examples: 0.30487806
Loss after 60512 examples: 0.31988215
Loss after 63712 examples: 0.19847064
Loss after 66912 examples: 0.15947054
Loss after 70112 examples: 0.18589474
Loss after 73280 examples: 0.17489420
Loss after 76480 examples: 0.17149237
Loss after 79680 examples: 0.13422157
Loss after 82880 examples: 0.12357379
Loss after 86048 examples: 0.07973983
Loss after 89248 examples: 0.09866679
Loss after 92448 examples: 0.12643898
Loss after 95648 examples: 0.11451457
Loss after 98816 examples: 0.13648006
Loss after 102016 examples: 0.20199555
Loss after 105216 examples: 0.12025768
Loss after 108384 examples: 0.07010404
Loss after 111584 examples: 0.11681102
Loss after 114784 examples: 0.09980745
Loss after 117984 examples: 0.05599251
Loss after 121152 examples: 0.11705624
Loss after 124352 examples: 0.07813235
Loss after 127552 examples: 0.10078995
Loss after 130752 examples: 0.06520590
Loss after 133920 examples: 0.06902208
Loss after 137120 examples: 0.17112651
Loss after 140320 examples: 0.11451929
Loss after 143520 examples: 0.08121495
Loss after 146688 examples: 0.04248923
Loss after 149888 examples: 0.17102784
Loss after 153088 examples: 0.16688630
Loss after 156256 examples: 0.04277354
Loss after 159456 examples: 0.13935378
Loss after 162656 examples: 0.06841750
Loss after 165856 examples: 0.04572189
Loss after 169024 examples: 0.05570918
Loss after 172224 examples: 0.13006496
Loss after 175424 examples: 0.10049317
Loss after 178624 examples: 0.07614226
Loss after 181792 examples: 0.08325815
Loss after 184992 examples: 0.05566367
Loss after 188192 examples: 0.02607636
Loss after 191392 examples: 0.10842932
Loss after 194560 examples: 0.02392360
Loss after 197760 examples: 0.04697968
Loss after 200960 examples: 0.08178131
Loss after 204128 examples: 0.03102581
Loss after 207328 examples: 0.07605655
Loss after 210528 examples: 0.12643991
Loss after 213728 examples: 0.07767147
Loss after 216896 examples: 0.05413846
Loss after 220096 examples: 0.02587240
Loss after 223296 examples: 0.03239942
Loss after 226496 examples: 0.07236920
Loss after 229664 examples: 0.05344971
Loss after 232864 examples: 0.04255608
Loss after 236064 examples: 0.09389993
Loss after 239264 examples: 0.06719103
Accuracy of the model on the 2000 test images: 97.000000%
================ Diagnostic Run torch.onnx.export version 2.0.1 ================
verbose: False, log level: Level.ERROR
======================= 0 NONE 0 NOTE 0 WARNING 0 ERROR ========================